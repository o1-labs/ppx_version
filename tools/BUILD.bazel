load(
    "@obazl_rules_ocaml//ocaml:build.bzl",
    "ocaml_archive",
    "ocaml_executable",
    "ocaml_interface",
    "ocaml_module",
    "ocaml_ns_module",
    "ppx_archive",
    "ppx_executable",
    "ppx_module",
    "ppx_ns_module",
)

COMMON_OPTS = select({
    "//bzl/config:enable_verbose": ["-verbose"],
    "//conditions:default": [],
}) + []

LINK_OPTS = select({
    "//bzl/config:always_link": ["-linkall"],
    "//conditions:default": [],
}) + []

EXEC_OPTS = COMMON_OPTS + LINK_OPTS + []
IMPL_OPTS = COMMON_OPTS + LINK_OPTS + []
INTF_OPTS = COMMON_OPTS + LINK_OPTS + []
ARCHIVE_OPTS = COMMON_OPTS + LINK_OPTS + []
COMMON_DEPS = []
PPX_EXEC_OPTS = COMMON_OPTS + LINK_OPTS + ["-predicates", "deriver"]
PPX_IMPL_OPTS = COMMON_OPTS + LINK_OPTS + ["-predicates", "deriver"]
PPX_INTF_OPTS = COMMON_OPTS + LINK_OPTS + ["-predicates", "deriver"]
PPX_NS_OPTS = COMMON_OPTS + LINK_OPTS + []
PPX_ARCHIVE_OPTS = COMMON_OPTS + LINK_OPTS + []
PPX_VERSION_NS = "Ppx_version"

PPX_ARGS = [
    # do not sort (buildifier)
    "-cookie",
    "library-name=\"ppx_version\"",
    "-corrected-suffix",
    ".ppx-corrected",
]

################################################################
ppx_executable(
    name = "print_versioned_types",
    srcs = ["@obazl//ppxlib:driver_standalone_runner"],
    opts = IMPL_OPTS + [
        "-verbose",
        "-linkall",
        "-predicates", "ppx_driver,ppx_deriver",
        # "-predicates", "native",
    ],
    visibility = ["//visibility:public"],
    deps = [
        # do not sort (buildifier)
        "@opam//pkg:ppx_bin_prot",
        "@opam//pkg:lens.ppx_deriving",
        "@opam//pkg:ppx_deriving",
        "@opam//pkg:ppx_deriving.std",
        "@opam//pkg:ppx_sexp_conv",
        "@opam//pkg:ppx_compare",
        "@opam//pkg:ppx_enumerate",
        "@opam//pkg:ppx_fields_conv",
        "@opam//pkg:ppx_hash",
        "@opam//pkg:ppx_deriving_yojson",
        ":print_versioned_types.cm_",
    ],
)

ocaml_module(
    name = "print_versioned_types.cm_",
    impl = "print_versioned_types.ml",
    opts = IMPL_OPTS,
    ppx = "//src:ppxlib_metaquot",
    ppx_args = [
        # do not sort (buildifier)
        "-cookie",
        "library-name=\"ppx_version\"",
        "-corrected-suffix",
        ".ppx-corrected",
    ],
    visibility = ["//visibility:public"],
    deps = ["//src:ppx_version"]
)

################################################################
ppx_executable(
    name = "print_binable_functors",
    srcs = ["@obazl//ppxlib:driver_standalone_runner"],
    opts = IMPL_OPTS + [
        "-verbose",
        "-linkall",
        "-predicates", "ppx_driver,ppx_deriver",
    ],
    visibility = ["//visibility:public"],
    deps = [
        # do not sort (buildifier)
        "@opam//pkg:ppx_bin_prot",
        "@opam//pkg:lens.ppx_deriving",
        "@opam//pkg:ppx_deriving",
        "@opam//pkg:ppx_deriving.std",
        "@opam//pkg:ppx_sexp_conv",
        "@opam//pkg:ppx_compare",
        "@opam//pkg:ppx_enumerate",
        "@opam//pkg:ppx_fields_conv",
        "@opam//pkg:ppx_hash",
        "@opam//pkg:ppx_deriving_yojson",
        ":print_binable_functors.cm_",
    ],
)

ocaml_module(
    name = "print_binable_functors.cm_",
    impl = "print_binable_functors.ml",
    opts = IMPL_OPTS + ["-verbose", "-predicates", "ppx_driver,ppx_deriver"],
    ppx = "//src:ppxlib_metaquot",
    ppx_args = [
        # do not sort (buildifier)
        "-cookie",
        "library-name=\"ppx_version\"",
        "-corrected-suffix",
        ".ppx-corrected",
    ],
    visibility = ["//visibility:public"],
    deps = [
        # do not sort (buildifier)
        "@opam//pkg:ppx_bin_prot",
        "@opam//pkg:lens.ppx_deriving",
        "@opam//pkg:ppx_deriving.std",
        "@opam//pkg:ppx_sexp_conv",
        "@opam//pkg:ppx_compare",
        "@opam//pkg:ppx_enumerate",
        "@opam//pkg:ppx_fields_conv",
        "@opam//pkg:ppx_hash",
        "@opam//pkg:ppx_deriving_yojson",
        "//src:ppx_version",
    ],
)
